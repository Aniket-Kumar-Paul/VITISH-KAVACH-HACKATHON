{
	"info": {
		"_postman_id": "9c8697d2-7083-4101-b785-c20a79b8ef16",
		"name": "Kavach",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22850203"
	},
	"item": [
		{
			"name": "Persons",
			"item": [
				{
					"name": "Get Entities",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/entity",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"entity"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Entity",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"if( responseCode.code === 200) {\r",
									"    const response = JSON.parse(responseBody);\r",
									"    pm.environment.set(\"meta_id\", response.meta_id);\r",
									"    pm.environment.set(\"entity_id\", response.id);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Aneesh",
									"type": "text"
								},
								{
									"key": "meta_id",
									"value": "123456789",
									"type": "text"
								},
								{
									"key": "images",
									"type": "file",
									"src": "/C:/Users/PRATIK GARAI/Pictures/Wallpapers/cat+fish.png"
								},
								{
									"key": "images",
									"type": "file",
									"src": "/C:/Users/PRATIK GARAI/Pictures/Wallpapers/pngegg.png"
								},
								{
									"key": "tag",
									"value": "vehicle",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{SERVER}}/entity",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"entity"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Entity",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/entity/{{meta_id}}",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"entity",
								"{{meta_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get entity using meta",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/entity/meta/{{meta_id}}",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"entity",
								"meta",
								"{{meta_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Frames",
			"item": [
				{
					"name": "Get Frames",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/frame?page=2",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"frame"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Frame",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"if( responseCode.code === 200) {\r",
									"    const response = JSON.parse(responseBody);\r",
									"    pm.environment.set(\"frame_id\", response.id);\r",
									"    pm.environment.set(\"frame_path\", response.path);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "latitude",
									"value": "23.45653345",
									"type": "text"
								},
								{
									"key": "longitude",
									"value": "23.76567567",
									"type": "text"
								},
								{
									"key": "image",
									"type": "file",
									"src": "/C:/Users/PRATIK GARAI/Pictures/Wallpapers/pngegg.png"
								},
								{
									"key": "timestamp",
									"value": "2023-03-24T11:47:57.915Z",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{SERVER}}/frame",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"frame"
							]
						}
					},
					"response": []
				},
				{
					"name": "Frame",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/frame/{{frame_id}}",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"frame",
								"{{frame_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Frame By Path",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/frame/path?path={{frame_path}}",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"frame",
								"path"
							],
							"query": [
								{
									"key": "path",
									"value": "{{frame_path}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Logs",
			"item": [
				{
					"name": "Add log",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{SERVER}}/log?entity_id={{entity_id}}&frame_id={{frame_id}}&xmin=0.1&xmax=0.5&ymin=0.2&ymax=0.8",
							"host": [
								"{{SERVER}}"
							],
							"path": [
								"log"
							],
							"query": [
								{
									"key": "entity_id",
									"value": "{{entity_id}}"
								},
								{
									"key": "frame_id",
									"value": "{{frame_id}}"
								},
								{
									"key": "xmin",
									"value": "0.1"
								},
								{
									"key": "xmax",
									"value": "0.5"
								},
								{
									"key": "ymin",
									"value": "0.2"
								},
								{
									"key": "ymax",
									"value": "0.8"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Health Check",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{SERVER}}",
					"host": [
						"{{SERVER}}"
					]
				}
			},
			"response": []
		}
	]
}